@using HomeStreetInvest.Model;

@using Homsin.Service;

@inject AuthenticationService AuthenticationService
@inject NavigationManager NavigationManager
@inject EncryptionService EncryptionService
@inject AccountsDataService AccountsDataService

@if (!string.IsNullOrEmpty(_errorMessage))
{
    <div class="container-fluid" style="background-color:#BB6B00; padding-top:20px; padding-bottom:20px;">
        <div class="row">
            <div class="col-sm-10">
                @_errorMessage
            </div>
            <div class="col-sm-2">
            </div>
        </div>
    </div>
    <br />
    <br />
}

<div class="container-fluid">
    <div class="row">
        <div class="form-group">
            <label for="username">Username</label>
            <input type="text" class="form-control" id="username">
        </div>
    </div>

    <br />

        <div class="row">
        <div class="form-group">
            <label for="amail">E-Mail</label>
            <input type="email" class="form-control" id="amail">
        </div>
    </div>

    <br />

    <div class="row">
        <div class="form-group">
            <label for="Password">Password</label>
            <input type="password" class="form-control" id="Password">
        </div>
    </div>

    <br />
    <div class="row">
        <div class="form-group">
            <label for="rePassword">Re Enter Password</label>
            <input type="password" class="form-control" id="rePassword">
        </div>
    </div>

    <br />
</div>

<div class="container-fluid" style="background-color:#4C86A8;
    padding-top:20px;
    padding-bottom:20px;
    position: fixed;
    bottom: 0;
    width: 100%;">
    <div class="row">
        <div class="col-sm-10">
            Create new account,... &nbsp; <button @onclick="Create" type="button" class="btn btn-outline-info"><img width="24" height="24" src="https://img.icons8.com/fluency/24/000000/checkmark--v1.png" alt="active-state" />&nbsp; Create Account</button>
        </div>
        <div class="col-sm-2">
        </div>
    </div>
</div>

@code 
{
    private string _Username{ get; set; }
    private string _Password { get; set; }
    private string _RePassword { get; set; }
    private string _Email { get; set; }

    private string _errorMessage { get; set; } = "";

    private async void Create()
    {
        if (string.IsNullOrEmpty(_Password) && string.IsNullOrEmpty(_Username) && string.IsNullOrEmpty(_RePassword) && string.IsNullOrEmpty(_Email))
        {
            if (_Password != _RePassword)
            {
                _errorMessage = "Passwords Do Not Match";
            }
            else
            {
                UserAccount CheckUser;
                try
                {
                    CheckUser = await AuthenticationService.GetUser(_Username);
                    if (CheckUser != null)
                    {
                        _errorMessage = "User Already Exist";
                    }
                    else
                    {
                        //Add further validations as want
                        UserAccount UserAccount = new();
                        UserAccount.email = _Email;
                        UserAccount.userName = _Username;
                        UserAccount.password = _Password;

                        UserAccount.encKey = "b14ca5898a4e4133bbce2ea2315a1916";

                        try
                        {
                            UserAccount.password = EncryptionService.EncryptString( UserAccount.encKey, UserAccount.password);
                            await AccountsDataService.CreateAsync(UserAccount);

                            NavigationManager.NavigateTo("/Auth");
                            StateHasChanged();
                        }
                            catch
                            {
                                _errorMessage = "Something Went Wrong";
                            }
                        }
                    }
                    catch
                    {
                        _errorMessage = "Something Went Wrong";
                    }
                }
            }

        }
}