@page "/Housing/Estimations"

@using System.Web;
@using Homsin.Service;
@using static Homsin.Service.HouseIntelService;

@inject NavigationManager NavigationManager
@inject HouseIntelService HouseIntelService

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item active">
                <a class="nav-link" href="/Housing/Library">Library</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/Housing/Estimations">Estimate</a>
            </li>
            <li class="nav-item active">
                <a class="nav-link" href="#">Sell</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">More</a>
            </li>
        </ul>
    </div>
</nav>

<div class="container-fluid" style="background-color:#4C86A8; padding-top:20px; padding-bottom:20px;">
    <div class="row">
        <div class="col-sm-10">
            <nav aria-label="breadcrumb">
                <button type="button" class="@(HouseIntelService.currentWizardPage != 0 ? "btn btn-outline-info" : "btn btn-info")" @onclick="@(() => NavigateForward(0))">
                    Zoning <span class="badge badge-light">1</span>
                </button>
                <button type="button" class="@(HouseIntelService.currentWizardPage != 1 ? "btn btn-outline-info" : "btn btn-info")" @onclick="@(() => NavigateForward(1))">
                    Location <span class="badge badge-light">2</span>
                </button>
                <button type="button" class="@(HouseIntelService.currentWizardPage != 2 ? "btn btn-outline-info" : "btn btn-info")" @onclick="@(() => NavigateForward(2))">
                    Category <span class="badge badge-light">3</span>
                </button>
                <button type="button" class="@(HouseIntelService.currentWizardPage != 3 ? "btn btn-outline-info" : "btn btn-info")" @onclick="@(() => NavigateForward(4))">
                    Exterior <span class="badge badge-light">5</span>
                </button>                
                <button type="button" class="@(HouseIntelService.currentWizardPage != 4 ? "btn btn-outline-info" : "btn btn-info")" @onclick="@(() => NavigateForward(3))">
                    Numbers <span class="badge badge-light">4</span>
                </button>
                <button type="button" class="@(HouseIntelService.currentWizardPage != 5 ? "btn btn-outline-info" : "btn btn-info")" @onclick="@(() => NavigateForward(5))">
                    Results <span class="badge badge-light">6</span>
                </button>
            </nav>
        </div>
        <div class="col-sm-1">
        </div>
        <div class="col-sm-1">
            <button type="button" class="btn btn-info" @onclick="@(() => NavigateForward(WizPage+1))">
                Next
            </button>
        </div>
    </div>
</div>

<br />
<br />

@HouseIntelService.currentWizardPage
@HouseIntelService.housePrice.mSZoning
@HouseIntelService.housePrice.lotConfig
@HouseIntelService.housePrice.bldgType
@HouseIntelService.housePrice.exterior1st

@HouseIntelService.housePrice.overallCond
@HouseIntelService.housePrice.lotArea
@HouseIntelService.housePrice.yearBuilt
@HouseIntelService.housePrice.bsmtFinSF2
@HouseIntelService.housePrice.totalBsmtSF
@HouseIntelService.housePrice.totalBsmtSF
@HouseIntelService.housePrice.yearRemodAdd

@if (HouseIntelService.currentWizardPage == (int)HouseIntelService.WizardPage.Zoning)
{
    <EstimationZoning></EstimationZoning>
}
else if (HouseIntelService.currentWizardPage == (int)HouseIntelService.WizardPage.Location)
{
    <EstimationLocation></EstimationLocation>
}
else if (HouseIntelService.currentWizardPage == (int)HouseIntelService.WizardPage.Category)
{
    <EstimationCategory></EstimationCategory>
}
else if (HouseIntelService.currentWizardPage == (int)HouseIntelService.WizardPage.Numericals)
{
    <EstimationNumericals></EstimationNumericals>
}
else if (HouseIntelService.currentWizardPage == (int)HouseIntelService.WizardPage.Exterior)
{
    <EstimationExterior></EstimationExterior>
}
else if (HouseIntelService.currentWizardPage == (int)HouseIntelService.WizardPage.Results)
{
    <EstimationResults></EstimationResults> @*resultpage*@
}

@code 
{
    int WizPage;

    //Navigate to a Location
    private void NavigateForward(int ToLocation)
    {
        if(ToLocation<= WizPage)
        {
            HouseIntelService.currentWizardPage = (int)(WizardPage)ToLocation;
            WizPage = (int)HouseIntelService.currentWizardPage;
            StateHasChanged();
        }
    }

    protected override void OnInitialized()
    {
        WizPage = (int)HouseIntelService.currentWizardPage;
    }
}