@using HomeStreetInvest.Model;
@using Homsin.Service;
@using MongoDB.Bson;

@inject AuthenticationService AuthenticationService
@inject FeedDataService FeedDataService

@if (!string.IsNullOrEmpty(_errorMessage))
{
    <div class="container-fluid" style="background-color:#BB6B00; padding-top:20px; padding-bottom:20px;">
        <div class="row">
            <div class="col-sm-10">
                @_errorMessage
            </div>
            <div class="col-sm-2">
            </div>
        </div>
    </div>
    <br />
    <br />
}

<div class="container-fluid">
    <div class="row">
        <div class="form-group">
            <label for="heading">Heading</label>
            <input type="text" class="form-control" @bind="heading" id="heading">
        </div>
    </div>

    <br />

    <div class="row">
        <div class="form-group">
            <label for="content">Content</label>
            <textarea class="form-control" id="content" @bind="content" rows="6"></textarea>
        </div>
    </div>

    <br />

    <div class="row">
        <div class="form-group">
            <label for="heading">Description</label>
            <input type="text" class="form-control" @bind="description" id="Description">
        </div>
    </div>

    <br />
</div>

<br />
<br />
<br />
<br />
<br />
<br />


<div class="container-fluid" style="background-color:#4C86A8;
    padding-top:20px;
    padding-bottom:20px;
    position: fixed;
    bottom: 0;
    width: 100%;">
    <div class="row">
        <div class="col-sm-10">
            Create a post... &nbsp; <button @onclick="SubmitPost" type="button" class="btn btn-outline-info"><img width="24" height="24" src="https://img.icons8.com/fluency/48/create-new.png" />&nbsp; Create Post</button>
        </div>
        <div class="col-sm-2">
        </div>
    </div>
</div>



@code
{
    private string _currency { get; set; } = "$"; //Default
    private string _errorMessage { get; set; } = "";

    public string heading { get; set; } = null!;
    public string content { get; set; } = null!;
    public string description { get; set; } = null!;

    private async void SubmitPost()
    {
        Feed feed = new();
        feed.description = description;
        feed.content = content;
        feed.FeID = "_";
        feed.heading = heading;
        feed.datePosted = DateTime.Today;
        feed.username = AuthenticationService.Username;

        if (string.IsNullOrEmpty(feed.description) ||
            string.IsNullOrEmpty(feed.content) ||
            string.IsNullOrEmpty(feed.username) ||
            string.IsNullOrEmpty(feed.heading))
        {
            _errorMessage = "Please enter all Values";
        }
        else
        {
            try
            {
                feed._id = ObjectId.GenerateNewId();
                feed.FeID = feed._id.ToString();
                await FeedDataService.CreateAsync(feed);
            }
            catch (Exception SPe)
            {
                _errorMessage = SPe.Message;
            }
        }

    }
}
