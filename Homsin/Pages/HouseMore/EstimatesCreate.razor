@page "/Housing/Estimates/Create"
@using HomeStreetInvest.Model;
@using Homsin.Service;

@inject EstimateService EstimateService
@inject AuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <a class="nav-link" href="/Housing/Library">Library</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/Housing/Estimations">Estimate</a>
            </li>
            <li class="nav-item ">
                <a class="nav-link" href="/Housing/Ads">Sell</a>
            </li>
            <li class="nav-item active">
                <a class="nav-link active" href="/Housing/More">More</a>
            </li>
        </ul>
    </div>
</nav>

<br />
<br />

@if (!string.IsNullOrEmpty(_errorMessage))
{
    <div class="container-fluid" style="background-color:#BB6B00; padding-top:20px; padding-bottom:20px;">
        <div class="row">
            <div class="col-sm-10">
                @_errorMessage
            </div>
            <div class="col-sm-2">
            </div>
        </div>
    </div>
    <br />
    <br />
}

<div class="container-fluid">
    <div class="row">
        <div class="form-group">
            <label for="heading">Heading</label>
            <input type="text" class="form-control" @bind="heading" id="heading">
        </div>
    </div>

    <br />

    <div class="row">
        <div class="form-group">
            <label for="content">Content</label>
            <textarea class="form-control" id="content" rows="6" @bind="content"></textarea>
        </div>
    </div>

    <br />

    <div class="row">
        <div class="form-group">
            <label for="Description">Description</label>
            <input type="text" class="form-control" id="Description" @bind="description">
        </div>
    </div>

    <br />

    <div class="row">
        <div class="form-group">
            <label for="sellprice">Selling Price</label>
            <div class="input-group">
                <input type="text" class="form-control" id="sellprice" @bind="_estimateValue">
                <div class="input-group-append">
                    <span class="input-group-text">@_currency</span>
                </div>
            </div>
        </div>
    </div>

    <br />

</div>

<br />
<br />
<br />
<br />
<br />
<br />


<div class="container-fluid" style="background-color:#4C86A8;
    padding-top:20px;
    padding-bottom:20px;
    position: fixed;
    bottom: 0;
    width: 100%;">
    <div class="row">

            <div class="col-sm-10">
            <button @onclick="Save" type="button" class="btn btn-outline-info"><img width="24" height="24" src="https://img.icons8.com/fluency/48/create-new.png" />&nbsp; Save Estimate</button>
            </div>
            <div class="col-sm-2">
            </div>
    </div>
</div>



@code
{
    private string _currency { get; set; } = "$"; //Default
    private string _errorMessage { get; set; }
    private bool _myPost { get; set; } = true;

    private string heading { get; set; } = "";
    private string content { get; set; } = "";
    private string description { get; set; } = "";

    private string _estimateValue { get; set; } = "Wait...";

    protected /*async*/ override void OnInitialized()
    {
        try
        {
            var uri = new Uri(NavigationManager.Uri);
            var query = System.Web.HttpUtility.ParseQueryString(uri.Query);

            _estimateValue = query["Estimate"];
        }
        catch
        {
            _estimateValue = "0";
        }

    }

    private async void Save()
    {            Estimate estimate = new();
        estimate.heading = heading;
        estimate.content = content;
        estimate.EsID = "_";
        estimate.description = description;
        estimate.sellprice = _estimateValue;
        estimate.username = AuthenticationService.Username;

        if (string.IsNullOrEmpty(estimate.content) ||
    string.IsNullOrEmpty(estimate.heading) ||
    string.IsNullOrEmpty(estimate.username) ||
    string.IsNullOrEmpty(estimate.sellprice) ||
    string.IsNullOrEmpty(estimate.description))
        {
            _errorMessage = "Ohhhhh something is missing";
        }
        else
        {
            try
            {

                await EstimateService.CreateEstimate(estimate);
            }
            catch (Exception CEe)
            {
                _errorMessage = CEe.Message;
            }
        }
    }
}
